{"version":3,"sources":["login.css","login.scss","bootstrap4/mixins/_breakpoints.scss"],"names":[],"mappings":"AAEA,YADA,KCIA,KAGE,OAAA,KAGF,YACE,SAAA,SACA,KAAA,GACA,IAAA,GACA,QAAA,EAGF,UACE,iBAAA,yBACA,kBAAA,UACA,gBAAA,MAGF,qBACE,eAAA,KADF,gCAII,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,iBAAA,OAAA,cAAA,OAAA,gBAAA,OAGA,MAAA,KACA,iBAAA,KAEA,YAAA,IAEA,SAAA,KAbJ,qCAgBM,MAAA,IACA,UAAA,MAjBN,0CAqBM,cAAA,KArBN,oDAwBQ,WAAA,KACA,YAAA,IACA,MAAA,QACA,QAAA,MAAA,KA3BR,mEDiBM,2DCeE,OAAA,KACA,cAAA,MAAA,IAAA,QAjCR,uEDqBM,uECiBE,aAAA,YACA,MAAA,QAvCR,6CA4CM,cAAA,KA5CN,yCAgDM,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,kBAAA,OAAA,eAAA,OAAA,YAAA,OACA,cAAA,OACA,MAAA,QCFF,6BDjDJ,gCAwDM,YAAA,MAxDN,qCA2DQ,MAAA,KACA,UAAA,KA5DR,wCA+DU,UAAA,QACA,YAAA,UACA,eAAA,EACA,MAAA,KAOV,cACE,SAAA,MACA,QAAA,YAAA,QAAA,YAAA,QAAA,KAEA,OAAA,EACA,QAAA,EAEA,MAAA,KACA,OAAA,KAEA,kBAAA,OAAA,eAAA,OAAA,YAAA,OAEA,iBAAA,QACA,MAAA","file":"login.min.css","sourcesContent":["html,\nbody,\n.backoffice {\n  height: 100%; }\n\n.login-logo {\n  position: absolute;\n  left: 5%;\n  top: 3%;\n  z-index: 1; }\n\n.bg-login {\n  background-image: url(../img/bg_login.png);\n  background-repeat: no-repeat;\n  background-size: cover; }\n\n.login-box-container {\n  padding-bottom: 50px; }\n  .login-box-container .login-box {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n    width: 100%;\n    background-color: #fff;\n    padding-top: 15%;\n    overflow: auto;\n    /* Mobile responsiveness */ }\n    .login-box-container .login-box > .row {\n      width: 80%;\n      min-width: 500px; }\n    .login-box-container .login-box .nav-tabs {\n      border-bottom: none; }\n      .login-box-container .login-box .nav-tabs .nav-link {\n        background: white;\n        font-weight: 700;\n        color: #0075c9;\n        padding: 0.5rem 2rem; }\n      .login-box-container .login-box .nav-tabs .nav-item.show .nav-link,\n      .login-box-container .login-box .nav-tabs .nav-link.active {\n        border: none;\n        border-bottom: solid 2px #0075c9; }\n      .login-box-container .login-box .nav-tabs .nav-link:not(.active):focus,\n      .login-box-container .login-box .nav-tabs .nav-link:not(.active):hover {\n        border-color: transparent;\n        color: #0075c9; }\n    .login-box-container .login-box .tab-content {\n      margin-bottom: 1rem; }\n    .login-box-container .login-box .recover {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      margin-bottom: 1.3rem;\n      color: inherit; }\n    @media (max-width: 1023.98px) {\n      .login-box-container .login-box {\n        padding-top: 120px; }\n        .login-box-container .login-box .row {\n          width: 100%;\n          min-width: auto; }\n          .login-box-container .login-box .row h1 {\n            font-size: 1.25rem;\n            line-height: 1.8125rem;\n            letter-spacing: 0px;\n            width: 75%; } }\n\n.login-footer {\n  position: fixed;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  bottom: 0;\n  z-index: 1;\n  width: 100%;\n  height: 50px;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  background-color: #252d34;\n  color: rgba(255, 255, 255, 0.7); }\n\n/*# sourceMappingURL=data:application/json;charset=utf8;base64, */\n","@import \"./scss_vars/template_variables\";\n@import \"./bootstrap4/mixins/breakpoints\";\n\n$footer-height: 50px;\n\nhtml,\nbody,\n.backoffice {\n  height: 100%;\n}\n\n.login-logo {\n  position: absolute;\n  left: 5%;\n  top: 3%;\n  z-index: 1;\n}\n\n.bg-login {\n  background-image: url(../img/bg_login.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n.login-box-container {\n  padding-bottom: $footer-height;\n\n  .login-box {\n    display: flex;\n    justify-content: center;\n    // align-items: center;\n\n    width: 100%;\n    background-color: $white;\n\n    padding-top: 15%;\n\n    overflow: auto;\n\n    > .row {\n      width: 80%;\n      min-width: 500px;\n    }\n\n    .nav-tabs {\n      border-bottom: none;\n\n      .nav-link {\n        background: white;\n        font-weight: 700;\n        color: $primary-color;\n        padding: 0.5rem 2rem;\n      }\n\n      .nav-item.show .nav-link,\n      .nav-link.active {\n        border: none;\n        border-bottom: solid 2px $primary-color;\n      }\n\n      .nav-link:not(.active):focus,\n      .nav-link:not(.active):hover {\n        border-color: transparent;\n        color: $primary-color;\n      }\n    }\n\n    .tab-content {\n      margin-bottom: 1rem;\n    }\n\n    .recover {\n      display: flex;\n      align-items: center;\n      margin-bottom: 1.3rem;\n      color: inherit;\n    }\n\n    /* Mobile responsiveness */\n    @include media-breakpoint-down(md) {\n      padding-top: 120px;\n\n      .row {\n        width: 100%;\n        min-width: auto;\n\n        h1 {\n          font-size: 1.25rem;\n          line-height: 1.8125rem;\n          letter-spacing: 0px;\n          width: 75%;\n        }\n      }\n    }\n  }\n}\n\n.login-footer {\n  position: fixed;\n  display: flex;\n\n  bottom: 0;\n  z-index: 1;\n\n  width: 100%;\n  height: $footer-height;\n\n  align-items: center;\n\n  background-color: $dark;\n  color: rgba($white, 0.7);\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}