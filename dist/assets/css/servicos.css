.servicos .widget {
  position: relative;
  background-color: #fff;
  -webkit-box-shadow: 0px 5px 10px #00000026;
          box-shadow: 0px 5px 10px #00000026;
  border-radius: 8px;
  padding: 1rem;
  margin-bottom: 1rem; }
  .servicos .widget .w-title {
    font-weight: bold;
    font-size: 1.222222222rem;
    line-height: 1.666666667rem;
    letter-spacing: 0.53px; }
  .servicos .widget .w-subtitle {
    color: rgba(77, 83, 92, 0.5); }
  .servicos .widget .widget-footer {
    position: absolute;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    left: 1rem;
    right: 1rem;
    bottom: 1rem;
    padding-top: 0.5rem;
    border-top: solid 1px #0075c9; }
    .servicos .widget .widget-footer a {
      text-decoration: none; }
  .servicos .widget.widget-primary {
    color: #fff;
    background-color: #0075c9; }
    .servicos .widget.widget-primary .w-subtitle {
      color: #002855; }
    .servicos .widget.widget-primary .widget-footer {
      border-top-color: #002855; }
      .servicos .widget.widget-primary .widget-footer a {
        color: #fff; }
  .servicos .widget.with-footer {
    padding-bottom: 3rem; }
  .servicos .widget.widget-news {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: end;
        -ms-flex-align: end;
            align-items: flex-end;
    background-image: -webkit-gradient(linear, left top, left bottom, from(#0075c9), to(#002855));
    background-image: linear-gradient(to bottom, #0075c9, #002855);
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    height: 292px; }
    .servicos .widget.widget-news .widget-news-footer {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-flow: row nowrap;
              flex-flow: row nowrap;
      -webkit-box-pack: justify;
          -ms-flex-pack: justify;
              justify-content: space-between;
      -webkit-box-align: end;
          -ms-flex-align: end;
              align-items: flex-end;
      width: 100%; }
      .servicos .widget.widget-news .widget-news-footer .details {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
            -ms-flex-flow: column nowrap;
                flex-flow: column nowrap;
        -webkit-box-flex: 1;
            -ms-flex: 1;
                flex: 1; }
      .servicos .widget.widget-news .widget-news-footer a.view-more {
        position: relative;
        padding-right: 1.4rem;
        width: -webkit-fit-content;
        width: -moz-fit-content;
        width: fit-content; }
        .servicos .widget.widget-news .widget-news-footer a.view-more::after {
          position: absolute;
          content: "";
          z-index: 1;
          right: 0.5rem;
          width: 12px;
          height: 12px;
          -webkit-transform: rotate(45deg);
                  transform: rotate(45deg);
          -webkit-clip-path: inset(0 0 20% 20%);
                  clip-path: inset(0 0 20% 20%);
          border: 2px solid #ffffff; }
        .servicos .widget.widget-news .widget-news-footer a.view-more:hover::after {
          border-color: #252d34; }
    .servicos .widget.widget-news.service-1 {
      background-image: url(../img/servicos_bg_1.svg), -webkit-gradient(linear, left top, left bottom, from(#0075c9), to(#002855));
      background-image: url(../img/servicos_bg_1.svg), linear-gradient(to bottom, #0075c9, #002855);
      background-size: auto 200px, cover;
      background-position: -40px center, center; }
    .servicos .widget.widget-news.service-2 {
      background-image: url(../img/servicos_bg_2.svg), -webkit-gradient(linear, left top, left bottom, from(#0075c9), to(#002855));
      background-image: url(../img/servicos_bg_2.svg), linear-gradient(to bottom, #0075c9, #002855);
      background-size: auto 275px, cover;
      background-position: -80px 40px, center; }
    .servicos .widget.widget-news.service-3 {
      background-image: url(../img/servicos_bg_3.svg), -webkit-gradient(linear, left top, left bottom, from(#0075c9), to(#002855));
      background-image: url(../img/servicos_bg_3.svg), linear-gradient(to bottom, #0075c9, #002855);
      background-size: auto 230px, cover;
      background-position: -170px 10px, center; }

.servicos .widgets-spacer {
  height: 2rem; }

.servicos .form-contactar {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-flow: column nowrap;
          flex-flow: column nowrap; }
  .servicos .form-contactar .form-group {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    margin-bottom: 0.5rem;
    background-color: rgba(255, 255, 255, 0.15); }
    .servicos .form-contactar .form-group.is-empty:not(.is-focus):not(.has-error):not(.is-disabled) label,
    .servicos .form-contactar .form-group label {
      color: rgba(255, 255, 255, 0.5); }
    .servicos .form-contactar .form-group input {
      width: 100%;
      color: #fff; }

.servicos .bg-blue {
  background-image: url(../img/bg_blue.png);
  background-size: 200%;
  background-position: center 60%; }

.servicos .campaign-subscribe {
  background-image: url(../img/servicos_bg_4.svg);
  background-position: right top;
  background-size: cover; }

@media (max-width: 1023.98px) {
  .servicos .img-50 {
    width: 60px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
