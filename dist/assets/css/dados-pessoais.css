.dados-pessoais .form-contactar {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-flow: column nowrap;
          flex-flow: column nowrap; }
  .dados-pessoais .form-contactar .form-group {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    margin-bottom: 0.5rem;
    background-color: rgba(255, 255, 255, 0.15); }
    .dados-pessoais .form-contactar .form-group.is-empty:not(.is-focus):not(.has-error):not(.is-disabled) label,
    .dados-pessoais .form-contactar .form-group label {
      color: rgba(255, 255, 255, 0.5); }
    .dados-pessoais .form-contactar .form-group input {
      width: 100%;
      color: #fff; }

.dados-pessoais .write-mode {
  display: none !important; }

.dados-pessoais .is-edit .read-mode {
  display: none !important; }

.dados-pessoais .is-edit .write-mode {
  display: -webkit-box !important;
  display: -ms-flexbox !important;
  display: flex !important; }

@media (max-width: 1024.98px) {
  .dados-pessoais .write-mode-actions {
    width: 100%;
    margin-top: 1rem; }
  .dados-pessoais div.form-edit-morada:not(.is-edit) .max-width-200 {
    max-width: 200px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
